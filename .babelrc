{
  "presets": [
    [
      "@babel/preset-env",
      {
        "useBuiltIns": "usage",
        "corejs": {
          "version": 3
        },
        "targets": {
          "chrome": "60",
          "firefox": "60",
          "ie": "10",
          "safari": "10",
          "edge": "17"
        }
      }
    ],
    "@babel/preset-react"
  ],
  "plugins": [
    "add-module-exports",
    "transform-class-properties",
    [
      "import",
      {
        "libraryName": "antd-mobile",
        "style": "css"
      }
    ],
    /*
      babel 在转译的过程中，对 syntax 的处理可能会使用到 helper 函数，对 api 的处理会引入 polyfill。
    
      默认情况下，babel 在每个需要使用 helper 的地方都会定义一个 helper，导致最终的产物里有大量重复的 helper；  引入 polyfill 时会直接修改全局变量及其原型，造成原型污染。
    
      @babel/plugin-transform-runtime 的作用是将 helper 和 polyfill 都改为从一个统一的地方引入，并且引入的  对象和全局变量是完全隔离的，这样解决了上面的两个问题。
    */
    [
      "@babel/plugin-transform-runtime",
      {
        "corejs": 3 // @babel/runtime-corejs3 不是 core-js
      }
    ],
    ["@babel/plugin-proposal-decorators", { "legacy": true }],
    "@babel/plugin-proposal-export-default-from"
  ]
}
